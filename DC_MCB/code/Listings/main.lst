C51 COMPILER V9.60.7.0   MAIN                                                              08/01/2024 18:42:10 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\output\main.obj
COMPILER INVOKED BY: C:\Users\CNCYCUI\OneDrive - ABB\Keil_v5\C51\BIN\C51.EXE source\main.c OPTIMIZE(8,SPEED) BROWSE DEBU
                    -G OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\output\main.obj)

line level    source

   1          #include "dcmcb.h"
   2          
   3          //orignal round down (-0.2 -> -1); custom round down (-0.2 -> 0)
   4          int floor_custom(float num, unsigned int adc_value)
   5          {
   6   1          int intPart = (int)num; //integer
   7   1          if (num < 0 && num > (-0.5f))  //negative -1<num<0
   8   1          {
   9   2               intPart= (int)(num+1) ;
  10   2          }
  11   1          if(intPart>0)
  12   1          {     
  13   2              return (int)(0.984*adc_value-62.5);
  14   2          }
  15   1          else
  16   1          {     
  17   2              return intPart;
  18   2          }
  19   1      }
  20          
  21          void Relay_close()
  22          {
  23   1        P32 = 1;
  24   1        delay_1ms(70);   // delay 70ms
  25   1        P32 = 0;
  26   1        
  27   1        P15=0;
  28   1        P55=1;
  29   1        //printf("Relay_close\n"); ///debug 
  30   1      }
  31          
  32          void Relay_open()
  33          {
  34   1        P33 = 1;    //P3.3 relay_open high pluse
  35   1        delay_1ms(70);   // delay 70ms
  36   1        P33= 0;
  37   1        
  38   1        P15=1;
  39   1        P55=0;
  40   1        //printf("Relay_open\n"); ///debug 
  41   1      }
  42          
  43          unsigned int Is_out_Current(int value)
  44          {
  45   1        if((abs(value)<=ACTION_CURRENT) && (0<abs(value)))
  46   1        {
  47   2          return 1;
  48   2        }
  49   1        else
  50   1        {
  51   2          return 0;
  52   2        }
  53   1      }
  54          
C51 COMPILER V9.60.7.0   MAIN                                                              08/01/2024 18:42:10 PAGE 2   

  55          void main(void)
  56          {
  57   1        unsigned int adcValue0, adcValue1,adc_current=0;  
  58   1        int RMS_current=0,tmp=0;  //not uesed yet
  59   1        unsigned int firstPos=0;
  60   1      
  61   1        
  62   1        bool howlactive=false; //0---close, 1----open
  63   1        bool relayactive=false; //0---close, 1----open
  64   1        
  65   1        Uart_Init();
  66   1        IO_Init();
  67   1        ADC_Init(); 
  68   1        //Led_On(); 
  69   1        
  70   1        //Uart_SendString("hello world!\r\n");
  71   1        Set_LGBT_Low();//initial status is low
  72   1        delay_1ms(10);
  73   1        Relay_open();//initial status is disable  
  74   1        
  75   1        
  76   1        firstPos = ADC_Read(0); //read value in P1.0///debug
  77   1        
  78   1        while(1)
  79   1        {
  80   2          adcValue0 = ADC_Read(0); //read value in P1.0 
  81   2          adcValue1 = ADC_Read(1); //read value in P1.1,not use
  82   2          adc_current = ADC_Read(2); //read value in P1.2
  83   2          RMS_current = floor_custom(SLOPE_CURRENT*adc_current-OFFSET_CURRENT,adc_current);
  84   2      /////debug////
  85   2          //printf("v0=%d\n",adcValue0);
  86   2          RMS_current+=2;
  87   2          ////////////////
  88   2          
  89   2          if((adcValue0<=RELAY_OPEN)&&(howlactive==true))
  90   2          {     
  91   3            howlactive=false;
  92   3            relayactive=false;
  93   3          }
  94   2          else if((adcValue0>RELAY_CLOSE)&&(howlactive==false))
  95   2          {   
  96   3            //just one time for initial
  97   3            if(firstPos>RELAY_CLOSE)
  98   3            {
  99   4              relayactive=true;
 100   4              firstPos=0;
 101   4            }
 102   3            else
 103   3            {
 104   4                howlactive=true;
 105   4            }
 106   3          }
 107   2          else
 108   2          { 
 109   3            firstPos=0;
 110   3          }
 111   2              
 112   2          //set the adc value!!!!!!adcValue0!=lastPos!!!!!!!compare 1 time or not!!!!!!
 113   2          if(howlactive==true)
 114   2          { 
 115   3            if(Is_out_Current(RMS_current)&&(relayactive==false))
 116   3            {
C51 COMPILER V9.60.7.0   MAIN                                                              08/01/2024 18:42:10 PAGE 3   

 117   4                Relay_close();
 118   4                Set_LGBT_High();    
 119   4                relayactive=true;
 120   4                delay_1ms(15); //delay 500ms
 121   4                Set_LGBT_Low();
 122   4                delay_1ms(10);  //delay_1ms 
 123   4                Relay_open();         
 124   4            }       
 125   3          }       
 126   2          //delay_100us(1);   
 127   2          //delay_1ms(100); //test  
 128   2        }
 129   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    466    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
